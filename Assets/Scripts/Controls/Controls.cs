//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Controls/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""PC"",
            ""id"": ""886a6c08-9eee-49b9-ad88-3b2f8dece5ce"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""71b78b23-093e-4714-a7cd-9826636b3d6a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""2bf33e1e-5bd9-4423-b29a-9b4e85519fa3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Discard"",
                    ""type"": ""Button"",
                    ""id"": ""3deba9cd-829d-4499-b922-30eac261d5ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollItems"",
                    ""type"": ""Button"",
                    ""id"": ""2b432905-d3a4-430f-b5f8-9bc71e596bf7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Value"",
                    ""id"": ""b6a5f9ae-71d7-4b5b-8c52-2399d575202b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectFirstItem"",
                    ""type"": ""Button"",
                    ""id"": ""0e5a2182-8dba-4e81-b9a5-bc83f2d1289d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectSecondItem"",
                    ""type"": ""Button"",
                    ""id"": ""6a76da6e-d941-4d4d-bf90-f4eb38aeec61"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""8433a685-e725-4595-bf89-c1e1cbc8bb41"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4b06cb2f-dd58-4e1a-b189-1b69ff59a0b3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01fa3d90-3e45-442e-a5b1-13db852ba55e"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Discard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c068b159-7a84-435a-837d-b5bb354c3277"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""ScrollItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bca0f786-c208-4ebf-84e6-2d1a07f79780"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""66a2bee6-6f7c-4677-b0f2-4b5846a98b1c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bd3a700b-46b1-4461-86ea-e4b4ff84f168"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""46a7f9fc-e7b7-499a-8716-46a6f83930e5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6efb814a-65c8-45b4-8aca-be1a78aa3709"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ab6f7ae2-e49b-4106-8957-ee0118160338"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ebca5eb7-699a-4e91-870c-89636ef62030"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectFirstItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a1d92d1-a01a-4559-954d-bad18c0fbaed"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSecondItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb3168c6-32f5-468a-9bcf-7359bca28339"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Default"",
            ""bindingGroup"": ""Default"",
            ""devices"": []
        }
    ]
}");
        // PC
        m_PC = asset.FindActionMap("PC", throwIfNotFound: true);
        m_PC_Movement = m_PC.FindAction("Movement", throwIfNotFound: true);
        m_PC_Interact = m_PC.FindAction("Interact", throwIfNotFound: true);
        m_PC_Discard = m_PC.FindAction("Discard", throwIfNotFound: true);
        m_PC_ScrollItems = m_PC.FindAction("ScrollItems", throwIfNotFound: true);
        m_PC_Sprint = m_PC.FindAction("Sprint", throwIfNotFound: true);
        m_PC_SelectFirstItem = m_PC.FindAction("SelectFirstItem", throwIfNotFound: true);
        m_PC_SelectSecondItem = m_PC.FindAction("SelectSecondItem", throwIfNotFound: true);
        m_PC_Pause = m_PC.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PC
    private readonly InputActionMap m_PC;
    private List<IPCActions> m_PCActionsCallbackInterfaces = new List<IPCActions>();
    private readonly InputAction m_PC_Movement;
    private readonly InputAction m_PC_Interact;
    private readonly InputAction m_PC_Discard;
    private readonly InputAction m_PC_ScrollItems;
    private readonly InputAction m_PC_Sprint;
    private readonly InputAction m_PC_SelectFirstItem;
    private readonly InputAction m_PC_SelectSecondItem;
    private readonly InputAction m_PC_Pause;
    public struct PCActions
    {
        private @Controls m_Wrapper;
        public PCActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PC_Movement;
        public InputAction @Interact => m_Wrapper.m_PC_Interact;
        public InputAction @Discard => m_Wrapper.m_PC_Discard;
        public InputAction @ScrollItems => m_Wrapper.m_PC_ScrollItems;
        public InputAction @Sprint => m_Wrapper.m_PC_Sprint;
        public InputAction @SelectFirstItem => m_Wrapper.m_PC_SelectFirstItem;
        public InputAction @SelectSecondItem => m_Wrapper.m_PC_SelectSecondItem;
        public InputAction @Pause => m_Wrapper.m_PC_Pause;
        public InputActionMap Get() { return m_Wrapper.m_PC; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PCActions set) { return set.Get(); }
        public void AddCallbacks(IPCActions instance)
        {
            if (instance == null || m_Wrapper.m_PCActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PCActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Discard.started += instance.OnDiscard;
            @Discard.performed += instance.OnDiscard;
            @Discard.canceled += instance.OnDiscard;
            @ScrollItems.started += instance.OnScrollItems;
            @ScrollItems.performed += instance.OnScrollItems;
            @ScrollItems.canceled += instance.OnScrollItems;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @SelectFirstItem.started += instance.OnSelectFirstItem;
            @SelectFirstItem.performed += instance.OnSelectFirstItem;
            @SelectFirstItem.canceled += instance.OnSelectFirstItem;
            @SelectSecondItem.started += instance.OnSelectSecondItem;
            @SelectSecondItem.performed += instance.OnSelectSecondItem;
            @SelectSecondItem.canceled += instance.OnSelectSecondItem;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IPCActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Discard.started -= instance.OnDiscard;
            @Discard.performed -= instance.OnDiscard;
            @Discard.canceled -= instance.OnDiscard;
            @ScrollItems.started -= instance.OnScrollItems;
            @ScrollItems.performed -= instance.OnScrollItems;
            @ScrollItems.canceled -= instance.OnScrollItems;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @SelectFirstItem.started -= instance.OnSelectFirstItem;
            @SelectFirstItem.performed -= instance.OnSelectFirstItem;
            @SelectFirstItem.canceled -= instance.OnSelectFirstItem;
            @SelectSecondItem.started -= instance.OnSelectSecondItem;
            @SelectSecondItem.performed -= instance.OnSelectSecondItem;
            @SelectSecondItem.canceled -= instance.OnSelectSecondItem;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IPCActions instance)
        {
            if (m_Wrapper.m_PCActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPCActions instance)
        {
            foreach (var item in m_Wrapper.m_PCActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PCActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PCActions @PC => new PCActions(this);
    private int m_DefaultSchemeIndex = -1;
    public InputControlScheme DefaultScheme
    {
        get
        {
            if (m_DefaultSchemeIndex == -1) m_DefaultSchemeIndex = asset.FindControlSchemeIndex("Default");
            return asset.controlSchemes[m_DefaultSchemeIndex];
        }
    }
    public interface IPCActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnDiscard(InputAction.CallbackContext context);
        void OnScrollItems(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnSelectFirstItem(InputAction.CallbackContext context);
        void OnSelectSecondItem(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
